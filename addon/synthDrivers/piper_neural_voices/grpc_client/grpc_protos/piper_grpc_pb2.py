# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: piper_grpc.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x10piper_grpc.proto\x12\npiper_grpc"\x07\n\x05\x45mpty"\x1a\n\x07Version\x12\x0f\n\x07version\x18\x01 \x01(\t"#\n\x0fVoiceIdentifier\x12\x10\n\x08voice_id\x18\x01 \x01(\t"\xbb\x02\n\tVoiceInfo\x12\x10\n\x08voice_id\x18\x01 \x01(\t\x12\x33\n\rsynth_options\x18\x02 \x01(\x0b\x32\x1c.piper_grpc.SynthesisOptions\x12\x35\n\x08speakers\x18\x03 \x03(\x0b\x32#.piper_grpc.VoiceInfo.SpeakersEntry\x12$\n\x05\x61udio\x18\x04 \x01(\x0b\x32\x15.piper_grpc.AudioInfo\x12\x15\n\x08language\x18\x05 \x01(\tH\x00\x88\x01\x01\x12)\n\x07quality\x18\x06 \x01(\x0e\x32\x13.piper_grpc.QualityH\x01\x88\x01\x01\x1a/\n\rSpeakersEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x0b\n\t_languageB\n\n\x08_quality"H\n\tVoicePath\x12\x11\n\tonnx_path\x18\x01 \x01(\t\x12\x18\n\x0b\x63onfig_path\x18\x02 \x01(\tH\x00\x88\x01\x01\x42\x0e\n\x0c_config_path"\x8b\x01\n\tUtterance\x12\x10\n\x08voice_id\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\x12+\n\x0bspeech_args\x18\x03 \x01(\x0b\x32\x16.piper_grpc.SpeechArgs\x12\x31\n\x0esynthesis_mode\x18\x04 \x01(\x0e\x32\x19.piper_grpc.SynthesisMode"\xac\x01\n\x10SynthesisOptions\x12\x14\n\x07speaker\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x19\n\x0clength_scale\x18\x02 \x01(\x02H\x01\x88\x01\x01\x12\x18\n\x0bnoise_scale\x18\x03 \x01(\x02H\x02\x88\x01\x01\x12\x14\n\x07noise_w\x18\x04 \x01(\x02H\x03\x88\x01\x01\x42\n\n\x08_speakerB\x0f\n\r_length_scaleB\x0e\n\x0c_noise_scaleB\n\n\x08_noise_w"b\n\x15VoiceSynthesisOptions\x12\x10\n\x08voice_id\x18\x01 \x01(\t\x12\x37\n\x11synthesis_options\x18\x02 \x01(\x0b\x32\x1c.piper_grpc.SynthesisOptions"L\n\tAudioInfo\x12\x13\n\x0bsample_rate\x18\x01 \x01(\r\x12\x14\n\x0cnum_channels\x18\x02 \x01(\r\x12\x14\n\x0csample_width\x18\x03 \x01(\r"3\n\x0fSynthesisResult\x12\x13\n\x0bwav_samples\x18\x01 \x01(\x0c\x12\x0b\n\x03rtf\x18\x02 \x01(\x02"\xa0\x01\n\nSpeechArgs\x12\x11\n\x04rate\x18\x01 \x01(\rH\x00\x88\x01\x01\x12\x13\n\x06volume\x18\x02 \x01(\rH\x01\x88\x01\x01\x12\x12\n\x05pitch\x18\x03 \x01(\rH\x02\x88\x01\x01\x12 \n\x13\x61ppended_silence_ms\x18\x04 \x01(\rH\x03\x88\x01\x01\x42\x07\n\x05_rateB\t\n\x07_volumeB\x08\n\x06_pitchB\x16\n\x14_appended_silence_ms*Y\n\rSynthesisMode\x12\x14\n\x10MODE_UNSPECIFIED\x10\x00\x12\r\n\tMODE_LAZY\x10\x01\x12\x11\n\rMODE_PARALLEL\x10\x02\x12\x10\n\x0cMODE_BATCHED\x10\x03*l\n\x07Quality\x12\x17\n\x13QUALITY_UNSPECIFIED\x10\x00\x12\x11\n\rQUALITY_X_LOW\x10\x01\x12\x0f\n\x0bQUALITY_LOW\x10\x02\x12\x12\n\x0eQUALITY_MEDIUM\x10\x03\x12\x10\n\x0cQUALITY_HIGH\x10\x04\x32\xc9\x03\n\npiper_grpc\x12;\n\x0fGetPiperVersion\x12\x11.piper_grpc.Empty\x1a\x13.piper_grpc.Version"\x00\x12;\n\tLoadVoice\x12\x15.piper_grpc.VoicePath\x1a\x15.piper_grpc.VoiceInfo"\x00\x12\x44\n\x0cGetVoiceInfo\x12\x1b.piper_grpc.VoiceIdentifier\x1a\x15.piper_grpc.VoiceInfo"\x00\x12R\n\x13GetSynthesisOptions\x12\x1b.piper_grpc.VoiceIdentifier\x1a\x1c.piper_grpc.SynthesisOptions"\x00\x12X\n\x13SetSynthesisOptions\x12!.piper_grpc.VoiceSynthesisOptions\x1a\x1c.piper_grpc.SynthesisOptions"\x00\x12M\n\x13SynthesizeUtterance\x12\x15.piper_grpc.Utterance\x1a\x1b.piper_grpc.SynthesisResult"\x00\x30\x01\x62\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "piper_grpc_pb2", _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    _VOICEINFO_SPEAKERSENTRY._options = None
    _VOICEINFO_SPEAKERSENTRY._serialized_options = b"8\001"
    _globals["_SYNTHESISMODE"]._serialized_start = 1209
    _globals["_SYNTHESISMODE"]._serialized_end = 1298
    _globals["_QUALITY"]._serialized_start = 1300
    _globals["_QUALITY"]._serialized_end = 1408
    _globals["_EMPTY"]._serialized_start = 32
    _globals["_EMPTY"]._serialized_end = 39
    _globals["_VERSION"]._serialized_start = 41
    _globals["_VERSION"]._serialized_end = 67
    _globals["_VOICEIDENTIFIER"]._serialized_start = 69
    _globals["_VOICEIDENTIFIER"]._serialized_end = 104
    _globals["_VOICEINFO"]._serialized_start = 107
    _globals["_VOICEINFO"]._serialized_end = 422
    _globals["_VOICEINFO_SPEAKERSENTRY"]._serialized_start = 350
    _globals["_VOICEINFO_SPEAKERSENTRY"]._serialized_end = 397
    _globals["_VOICEPATH"]._serialized_start = 424
    _globals["_VOICEPATH"]._serialized_end = 496
    _globals["_UTTERANCE"]._serialized_start = 499
    _globals["_UTTERANCE"]._serialized_end = 638
    _globals["_SYNTHESISOPTIONS"]._serialized_start = 641
    _globals["_SYNTHESISOPTIONS"]._serialized_end = 813
    _globals["_VOICESYNTHESISOPTIONS"]._serialized_start = 815
    _globals["_VOICESYNTHESISOPTIONS"]._serialized_end = 913
    _globals["_AUDIOINFO"]._serialized_start = 915
    _globals["_AUDIOINFO"]._serialized_end = 991
    _globals["_SYNTHESISRESULT"]._serialized_start = 993
    _globals["_SYNTHESISRESULT"]._serialized_end = 1044
    _globals["_SPEECHARGS"]._serialized_start = 1047
    _globals["_SPEECHARGS"]._serialized_end = 1207
    _globals["_PIPER_GRPC"]._serialized_start = 1411
    _globals["_PIPER_GRPC"]._serialized_end = 1868
# @@protoc_insertion_point(module_scope)
